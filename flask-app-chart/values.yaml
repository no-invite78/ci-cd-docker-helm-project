# Default values for flask-app-chart.
# Declare variables to be passed into your templates.

# This sets the number of replicas (default is 1).
replicaCount: 1

# This sets the container image to use.
image:
  repository: nanuka719/ci-cd-docker-helm  # Replace with your Docker Hub username and image name
  pullPolicy: IfNotPresent
  tag: latest  # Use 'latest' as the default image tag

# No need for secrets unless using a private registry
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Service Account setup
serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

# Pod-level annotations and labels
podAnnotations: {}
podLabels: {}

# Security Context for the Pod (can expand if needed)
podSecurityContext: {}
securityContext: {}

# Set up the Kubernetes service
service:
  type: LoadBalancer  # Changed to LoadBalancer to expose the app externally
  port: 5000          # Flask app runs on port 5000

# Ingress setup (not needed for now)
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

# Resource requests and limits for the container
resources:
  limits:
    cpu: "500m"
    memory: "512Mi"
  requests:
    cpu: "250m"
    memory: "256Mi"

# Liveness and readiness probes for health checks
livenessProbe:
  httpGet:
    path: /
    port: 5000  # Updated to match Flask app port
readinessProbe:
  httpGet:
    path: /
    port: 5000  # Same as above

# Autoscaling (disabled for now; can be enabled if needed later)
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

# Additional volumes (not needed for this app)
volumes: []
volumeMounts: []

# Node scheduling configurations (left empty for now)
nodeSelector: {}
tolerations: []
affinity: {}
